name: Rhysd actionlint
description: Check your workflows for common errors, like not declaring outputs before using them, bash script errors, and more!
branding:
  icon: tag
  color: gray-dark
outputs:
  results-file:
    description: "Path to the json results of the linter"
    value: ${{ steps.run.outputs.resultsfile }}
    
runs:
  using: composite
  steps:
  - name: Add anotation matcher
    run: echo "::add-matcher::actionlint-matcher.json"
    shell: bash
    
  - name: Run actionlint
    id: action-lint
    if: 1 == 2 # disable in favor of calling the image manually
    continue-on-error: true
    uses: docker://rhysd/actionlint@sha256:5f957b2a08d223e48133e1a914ed046bea12e578fe2f6ae4de47fdbe691a2468 # 1.6.22
    with:
      args: -color -format "{{json .}}"
  
  - name: Docker run    
    shell: bash
    id: run2
    continue-on-error: true
    run: |      
      echo "here!"
      docker run -v /home/runner/work/actionlint/actionlint:/repo --workdir /repo rhysd/actionlint@sha256:5f957b2a08d223e48133e1a914ed046bea12e578fe2f6ae4de47fdbe691a2468 -color -format "{{json .}}"
      echo $?
      echo "here!"
  
  - name: Docker run    
    shell: bash
    id: run
    continue-on-error: true
    run: |
      # running version 1.6.22 of rhysd/actionlint
      set pipefail;
      echo "here!"
      result=$(set -- pipefail && docker run -v /home/runner/work/actionlint/actionlint:/repo --workdir /repo rhysd/actionlint@sha256:5f957b2a08d223e48133e1a914ed046bea12e578fe2f6ae4de47fdbe691a2468 -color -format "{{json .}}")
      status=$?
      echo "Loaded status [$status]"
      if [[ $status == 0 ]];
      then
        echo "return code"
      else
        echo "else"
      fi
      echo "After the docker run command"
      echo $result
      echo $result > "actionlint-errors.json"
      echo "Content of actionlint-errors.json file":"
      cat "actionlint-errors.json"
      echo "resultsfile=actionlint-errors.json" >> $GITHUB_OUTPUT
      # exit code is the result of the docker call, which matches the actionlinter output code
      
      echo "This is the contents of the GITHUB_OUTPUT file: [$GITHUB_OUTPUT]"
      cat $GITHUB_OUTPUT

  - name: Test
    shell: bash
    run: echo "Last one!"

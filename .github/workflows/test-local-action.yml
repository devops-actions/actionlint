name: Test local action
on:
  push:

  pull_request:
  
jobs:
  test-local-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run the local action from the checked out branch
        id: action-lint
        uses: ./
            
      - name: Check for no reported errors
        if: steps.action-lint.outcome=='success'
        run: |
          echo "Error in 'action-lint' step, expected a failure status, but got success"
          # fail the job so reporting can pick it up
          exit 1
      
      - name: Check for expected errors
        if: always() && steps.action-lint.outcome=='failure'
        run: |
          echo "Todo: check the results of fake-output and fake-secret"
      
      - name: Test output file and expected contents
        if: always()
        shell: pwsh
        env:
          RESULTFILE: ${{ steps.action-lint.outputs.results-file }}
        run: |
          echo "Results file is [$env:RESULTFILE]"
          $result = Get-Content $env:RESULTFILE       
          $items = @(ConvertFrom-Json $result -Depth 10)     
      
          $found1 = $false
          $found2 = $false
          foreach ($item in $items) { 
            Write-Host "Found an error: "
            Write-Host "Message:" $item.message
            Write-Host "Filepath:" $item.filepath
            Write-Host "Line:" $item.line

            if ($item.filepath -eq ".github/workflows/test-local-action.yml" -and $item.line -eq 65) {
              if ($item.message -eq "property ""fake-output"" is not defined in object type {}"")
              $found1 = $true
            }

            if ($item.filepath -eq ".github/workflows/test-local-action.yml" -and $item.line -eq 88) {
              if ($item.message -eq "property ""test-job"" is not defined in object type {}"")
              $found2 = $true
            }
          }      

          if (!$found1){
            echo "Error finding the first expected result. Exiting with failure"
            exit 1
          } 
          else {
            Write-Host "Found first the expected error succesfully"
          }

          if (!$found2){
            echo "Error finding the second expected result. Exiting with failure"
            exit 1
          } 
          else {
            Write-Host "Found the second expected error succesfully"
          }
        
  job-with-errors:
    runs-on: ubuntu-latest
    needs: test-local-action
    steps:
     - name: Non existing output
       id: fake-output
       run: |
        echo "Let's echo an output that does not exist, should fail the check:"
        echo "Output that does not exist: ${{ needs.test-local-action.outputs.fake-output }}"

     - name: Non existing needs
       id: fake-needs-setup
       run: |
        echo "Let's echo an output that does not exist, should fail the check:"
        echo "Output that does not exist: ${{ needs.test-job.outputs.fake-output }}" 

     - name: Non existing secret
       id: fake-secret
       run: |
        echo "Let's echo a secret that does not exist, would be nice if this would fail the check:"
        echo "Secret that does not exist: ${{ secrets.fake-secret }}"
